{"version":3,"sources":["components/Reminder.js","components/ReminderForm.js","App.js","index.js"],"names":["Reminder","reminders","deleteReminder","Date","timestamp","toLocaleString","name","onClick","ReminderForm","props","onSubmit","value","nameValue","onChange","nameOnChange","dateValue","dateOnChange","type","App","addReminder","event","preventDefault","isNaN","state","newDate","getTime","alert","some","reminder","newName","reminderObject","axios","post","then","response","setState","concat","data","id","window","confirm","delete","filter","handleNameChange","target","handleDateChange","get","this","map","remind","i","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oMAUeA,EARE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAC7B,OACE,gCACG,IAAIC,KAAKF,EAAUG,WAAWC,iBADjC,aACiEJ,EAAUK,KAD3E,IACiF,wBAAQC,QAASL,EAAjB,wBCqBtEM,EAxBM,SAACC,GAClB,OACI,uBAAMC,SAAUD,EAAMC,SAAtB,UACI,6CAEI,uBACIC,MAAOF,EAAMG,UACbC,SAAUJ,EAAMK,kBAGxB,qDAEI,uBACIH,MAAOF,EAAMM,UACbF,SAAUJ,EAAMO,kBAGxB,8BACI,wBAAQC,KAAK,SAAb,uB,gBCkEDC,E,kDAhFb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAgBRU,YAAc,SAACC,GAEb,GADAA,EAAMC,iBACFC,MAAM,IAAInB,KAAK,EAAKoB,MAAMC,SAASC,WACrCC,MAAM,sBACD,GAAG,EAAKH,MAAMtB,UAAU0B,MAAK,SAACC,GAAD,OAAY,EAAKL,MAAMM,UAAUD,EAAStB,QAC/EoB,MAAM,EAAKH,MAAMM,QAAU,uBACrB,CACL,IAAMC,EAAiB,CACrBxB,KAAM,EAAKiB,MAAMM,QACjBzB,UAAW,IAAID,KAAK,EAAKoB,MAAMC,UAEjCO,IACGC,KAAK,iBAAkBF,GACvBG,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZlC,UAAW,EAAKsB,MAAMtB,UAAUmC,OAAOF,EAASG,MAChDR,QAAS,GACTL,QAAS,UAlCE,EAwCnBtB,eAAiB,SAACoC,GAClB,OAAO,WACAC,OAAOC,QAAQ,uCAChBT,IACGU,OADH,yBAC4BH,IACzBL,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZlC,UAAW,EAAKsB,MAAMtB,UAAUyC,QAAO,SAAAd,GAAQ,OAAIU,IAAOV,EAASU,aA/C5D,EAsDnBK,iBAAmB,SAACvB,GAAY,EAAKe,SAAS,CAAEN,QAAST,EAAMwB,OAAOjC,SAtDnD,EAwDnBkC,iBAAmB,SAACzB,GAAY,EAAKe,SAAS,CAAEX,QAASJ,EAAMwB,OAAOjC,SAtDpE,EAAKY,MAAQ,CACXtB,UAAW,GACX4B,QAAS,GACTL,QAAS,IALM,E,gEASE,IAAD,OACpBO,IACEe,IAAI,kBACJb,MAAK,SAAAC,GACL,EAAKC,SAAS,CAAElC,UAAWiC,EAASG,Y,+BA6C5B,IAAD,OACP,OACE,gCACE,2CACA,cAAC,EAAD,CACE3B,SAAUqC,KAAK5B,YACfP,UAAWmC,KAAKxB,MAAMM,QACtBf,aAAciC,KAAKJ,iBACnB5B,UAAWgC,KAAKxB,MAAMC,QACtBR,aAAc+B,KAAKF,mBAErB,0CACA,6BACGE,KAAKxB,MAAMtB,UAAU+C,KAAI,SAACC,EAAQC,GAAT,OACxB,cAAC,EAAD,CAAkBjD,UAAWgD,EAAQ/C,eAAgB,EAAKA,eAAe+C,EAAOX,KAAjEY,e,GAzETC,IAAMC,WCAxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0fedc1e0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Reminder = ({ reminders, deleteReminder }) => {\n  return (\n    <div>\n      {new Date(reminders.timestamp).toLocaleString()} &nbsp;&nbsp; {reminders.name} <button onClick={deleteReminder}>Delete</button>\n    </div>\n  )\n}\n\nexport default Reminder","import React from 'react'\r\n\r\nconst ReminderForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <div>\r\n                Name: &nbsp;\r\n                <input\r\n                    value={props.nameValue}\r\n                    onChange={props.nameOnChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                Date: &nbsp;&nbsp;&nbsp;\r\n                <input\r\n                    value={props.dateValue}\r\n                    onChange={props.dateOnChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ReminderForm","import React from 'react'\nimport Reminder from './components/Reminder'\nimport ReminderForm from './components/ReminderForm'\nimport axios from 'axios'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reminders: [],\n      newName: '',\n      newDate: ''\n    }\n  }\n\n  componentDidMount() {\n\t\taxios\n\t\t\t.get('/api/reminders')\n\t\t\t.then(response => {\n\t\t\t\tthis.setState({ reminders: response.data})\n\t\t\t})\n\t}\n\n  addReminder = (event) => {\n    event.preventDefault()\n    if (isNaN(new Date(this.state.newDate).getTime())) { \n      alert(\"Invalid date!\")\n    } else if(this.state.reminders.some((reminder)=>this.state.newName===reminder.name)){\n\t\t\talert(this.state.newName + \" already exists\")\n\t\t} else {\n    const reminderObject = {\n      name: this.state.newName,\n      timestamp: new Date(this.state.newDate)\n    }\n    axios\n      .post('/api/reminders', reminderObject)\n      .then(response => {\n        this.setState({\n          reminders: this.state.reminders.concat(response.data),\n          newName: '',\n          newDate: ''\n        })\n      })\n    }\n  }\n\n  deleteReminder = (id) => {\n\t\treturn () => {\n      if(window.confirm(\"Do you really want to delete this?\")) {\n        axios\n          .delete(`/api/reminders/${id}`)\n          .then(response => {\n            this.setState({\n              reminders: this.state.reminders.filter(reminder => id !== reminder.id)\n            })\n          })\n      }\n    }\n  }\n\n  handleNameChange = (event) => { this.setState({ newName: event.target.value }) }\n\n  handleDateChange = (event) => { this.setState({ newDate: event.target.value }) }\n\n  render() {\n    return (\n      <div>\n        <h2>Reminders</h2>\n        <ReminderForm \n          onSubmit={this.addReminder}\n          nameValue={this.state.newName}\n          nameOnChange={this.handleNameChange}\n          dateValue={this.state.newDate}\n          dateOnChange={this.handleDateChange}\n        />\n        <h2>At time:</h2>\n        <ul>\n          {this.state.reminders.map((remind, i) => \n            <Reminder key={i} reminders={remind} deleteReminder={this.deleteReminder(remind.id)} />\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}